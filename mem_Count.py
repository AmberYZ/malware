'''
Count memory declaration words in an assembly source code file
'''
import ConfigParser
import csv
import os
import string
import sys


#Helpter function: update dictionary [opcode, count]
def dictadd(dictionary,key):
    if key != "":
        if key in dictionary:
            dictionary[key] += 1
        else:
            dictionary[key] = 1


path = Config.get("Train","feature_save")
path_out = Config.get("Train","feature_save")
output = []
dict_pool = []
count = 0
with (open(os.path.join(path,"memory_allocation_word.csv"))) as f:
	for line in f:
		to_add = {}
		count += 1
		line = line.split(",")

		for item in line[1:]:
			dictadd(to_add,item.strip())

		sys.stdout.write('\r'+"Counting memory keywords: "+ str(count) + " "+line[0])
		sys.stdout.flush()
		output.append(to_add)
		dict_pool.extend(to_add.keys())


dict_key = list(set(dict_pool))

with open(os.path.join(path_out,"memory.csv"),"wb+") as f:
	w = csv.DictWriter(f,dict_key)
	w.writeheader()
	for item in output:
		w.writerow(item)
