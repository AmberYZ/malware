'''
Count strings in an assembly source code file
'''
import ConfigParser
import csv
import json
import numpy as np
import os
import re
import string
import sys

#Helpter function: update dictionary [opcode, count]
def dictadd(dictionary,key):
    if key != "":
        if key in dictionary:
            dictionary[key] += 1
        else:
            dictionary[key] = 1



Config = ConfigParser.ConfigParser()
Config.read("/home/amber/Malware/config")
rootdir = Config.get("Train","other") #Path to the import data
path_out = Config.get("Train","feature_save") #Path for saving extracted import counts


z = []
count = 0
for subdir, dirs, files in os.walk(rootdir):
    idx = ((subdir.rfind("/")))+1
    count +=1
    
    to_add = []
    print(str(subdir[idx:])+str(" ")+str(count))
    name = subdir[idx:].strip()
    to_add.append(name)

    for f in files:
        file = os.path.join(subdir, f)
        if(f=="strings"):
            str_count = 0
            with open((file),"rb") as string_file:
                for line in string_file:
                    str_count+=1
                    
                to_add.append(str_count)
    z.append(to_add)    

c = 0
with open(os.path.join(path_out,"strCount.csv"),'wb+') as f:
    w = csv.writer(f)
    for d in z:
        c+=1
        print("Writing file: "+str(c))
        w.writerow(d)

        



