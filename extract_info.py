'''
Extract info fields in info file
'''
import ConfigParser
import csv
import json
import numpy as np
import os
import re
import string
import sys

#Helpter function: update dictionary [opcode, count]
def dictadd(dictionary,key):
    if key != "":
        if key in dictionary:
            dictionary[key] += 1
        else:
            dictionary[key] = 1

#Loading configuration file
Config = ConfigParser.ConfigParser()
Config.read("/home/amber/Malware/config")
rootdir = Config.get("Train","other") #Path to the info data
path_out = Config.get("Train","feature_save") #Path for saving extracted info fields


reload(sys)
sys.setdefaultencoding("UTF-8")   

dict_keys = []
dict_pool = []
z = []
count = 0
for subdir, dirs, files in os.walk(rootdir):
    idx = ((subdir.rfind("/")))+1
    count +=1
    print(str(subdir[idx:])+str(" ")+str(count))
    name = subdir[idx:].strip()

    for f in files:
        file = os.path.join(subdir, f)
        if(f=="info"):
            with open((file),"rb") as sections:
                json_str = []
                for line in sections:
                    json_str.append(line)
                try: 
                    json_str = json_str[0].decode('utf-8', 'ignore').encode('utf-8')
                    info = json.loads(json_str)
                except:
                    pass
                info["Filename"]=name

                #Only these fields were extracted and considered useful
                keys = ["Filename","FileEntropy","SizeOfStackCommit","SizeOfHeapCommit","SizeOfUninitializedData","SizeOfHeapReserve","SizeOfStackReserve"
                ,"SizeOfHeaders","NumberOfSections","SizeOfCode","SizeOfInitializedData","SizeOfImage","NumberOfRvaAndSizes","FileSize"]
                info = dict((k, info[k]) for k in keys if k in info)

                dict_keys.extend(info.keys())   
          
            z.append(info)    

        dict_pool = list(set(dict_keys))


with open(os.path.join(path_out,"info.csv"),'wb+') as f:
    w = csv.DictWriter(f,dict_pool)
    w.writeheader()
    c = 0
    for d in z:
        c+=1
        print("Writing file: "+str(c))
        w.writerow(d)



