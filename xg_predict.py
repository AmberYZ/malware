'''
Predict testing sets
'''
import ConfigParser
import cPickle
import csv
import numpy as np
import os
import re
import string
import sys

train_data = []
train_label = []
Config = ConfigParser.ConfigParser()
Config.read("/home/amber/Malware/config")
path_data = Config.get("Train","feature_save")
path_opcode = Config.get("Train","feature_save")
path_label = Config.get("Train","label")
path_save = Config.get("Train","md")

#Testing
version = sys.argv[1]

test_data = []
with open(os.path.join("/data/trend/testing/feature_set_",version) as f:
    data_count = 0
    for line in f:
        data_count+=1
        sys.stdout.write('\r'+"Loading testing data: "+str(data_count))
        sys.stdout.flush()
        data = map(float,line.split(","))
        test_data.append(data)
test_data = np.array(test_data)

ver_pkl = version+'.pkl'
with open(os.path.join("/home/amber/xg_",ver_pkl,'r') as fid:
    gbm = cPickle.load(fid)

print('\n'+"predicting")
pred = gbm.predict_proba(test_data)
pred = np.array(pred)

pred_save = version+".csv"
np.savetxt(os.path.join("/home/amber",version,pred)
print("predicting complete")


